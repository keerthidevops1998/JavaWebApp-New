name: Deploy to Cloud Run from Source.

on:
  push:
    branches:
      - "main"

env:
  DOCKER_REPO: k1998/javawebapp     # ${{secrets.DOCKER_REPO}} 
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PASS: ${{secrets.DOCKER_PASS}}
  GCP_PROJECT_ID: sixth-storm-355211     # ${{secrets.GCP_PROJECT_ID}}
  GCP_CR_SVC_NAME: javawebapp-new-1 
  GCP_REGION: us-central1-a 
  GCP_CREDS: ${{secrets.GCP_SA_KEY}}
  GCP_GCR_IMAGE_NAME: javawebapp-new-1
  #GCP_GCR_REPO_URL: gcr.io/${{env.GCP_PROJECT_ID}}/${{env.GCP_GCR_IMAGE_NAME}}
  IMAGE_TAG: latest
  
jobs:
  build:
    name: Building Code
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Maven Package
        run: mvn -B clean package -DskipTests
      - name: Maven Verify
        run: mvn -B clean verify -Pintegration-test

  docker:
    name: Publish - Docker Hub
    runs-on: self-hosted
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
          
      - name: Login to Docker Hub
        run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - name: Build Docker image to dockerhub
        run: |-
          docker build -f Dockerfile -t $DOCKER_REPO:$IMAGE_TAG .
      - name: Push Docker image to dockerhub
        run: |-
          docker push $DOCKER_REPO:$IMAGE_TAG
          
      # Pushes docker image to GCR Container Registry
      - uses: RafikFarhad/push-to-gcr-github-action@v4.1
        with:
          gcloud_service_key: ${{ env.GCP_CREDS }} # can be base64 encoded or plain text
          registry: gcr.io
          project_id: ${{ env.GCP_PROJECT_ID }}
          image_name: ${{ env.GCP_GCR_IMAGE_NAME }}
          image_tag: ${{ env.IMAGE_TAG }}
          dockerfile: Dockerfile
          context: .

  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: self-hosted
    needs: [docker]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ env.GCP_CREDS }}
          
      - name: 'Setup Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: 'Deploy to Cloud Run'
        run: |-
          gcloud run deploy $GCP_CR_SVC_NAME \
              --region us-central1 \
              --image gcr.io/${{env.GCP_PROJECT_ID}}/${{env.GCP_GCR_IMAGE_NAME}}:${{env.IMAGE_TAG}} \
              --platform managed \
              --min-instances 0 \
              --max-instances 2 \
              --port 80 \
              --memory 512Mi \
              --allow-unauthenticated \
              --set-env-vars NAME="javawebapp-new-1"

#      - name: Deploy to Cloud Run
#        id: deploy
#        uses: google-github-actions/deploy-cloudrun@v0
#        with:
#          service: ${{ env.GCP_CR_SVC_NAME }}
#          region: ${{ env.REGION }}
#          min-instances: 0
#          max-instances: 1
#          port: 80
#          allow-unauthenticated: true
#          # NOTE: If required, update to the appropriate source folder
#          image: gcr.io/${{env.GCP_PROJECT_ID}}/${{env.GCP_GCR_IMAGE_NAME}}:${{env.IMAGE_TAG}}
#          env_vars: 'NAME="javawebapp-new-1"'

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

##############
