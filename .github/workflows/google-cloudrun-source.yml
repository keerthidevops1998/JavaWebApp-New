name: Deploy to Cloud Run from Source

on:
  push:
    branches:
      - "main"

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  # TODO: update Google Cloud project id
  SERVICE: javawebapp-new #keerthidevops # TODO: update Cloud Run service name
  REGION: us-central1-a # TODO: update Cloud Run service region
  #DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
  DOCKER_REPO: k1998/javawebapp
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
  #GCP_CREDS: ${{ secrets.GCP_CREDENTIALS }}
  GCP_CREDS: ${{ secrets.GCP_SA_KEY }}
  GCR_REPO_NAME: javawebapp-new
  GCP_REPO: gcr.io/${{ secrets.GCP_PROJECT_ID }}/$GCR_REPO_NAME
  TAG: latest
  CLOUDRUN_SERVICE: javawebapp-new-1
  
  
jobs:
  build:
    name: Building Code
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Maven Package
        run: mvn -B clean package -DskipTests
      - name: Maven Verify
        run: mvn -B clean verify -Pintegration-test

  docker:
    name: Publish - Docker Hub
    runs-on: self-hosted
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Login to Docker Hub
        run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - name: Build and push Docker image to dockerhub
        run: |
          docker build -f Dockerfile -t $DOCKER_REPO:$TAG .
          docker push $DOCKER_REPO:$TAG
        #
      - uses: RafikFarhad/push-to-gcr-github-action@v4.1
        with:
          gcloud_service_key: ${{ secrets.GCP_SA_KEY }} # can be base64 encoded or plain text
          registry: gcr.io
          project_id: ${{ env.PROJECT_ID }}
          image_name: ${{ env.GCR_REPO_NAME }}
          image_tag: latest
          dockerfile: Dockerfile
          context: .

        #
#      - name: Build Docker image for GCR
#        run: docker build -f Dockerfile -t $GCR_REPO:$TAG .
#      - name: Google Auth
#        id: auth
#        uses: 'google-github-actions/auth@v0'
#        with:
#          credentials_json: ${{ secrets.GCP_SA_KEY }}
#      - name: Publish GCR image
#        run: docker push $GCP_REPO:$TAG
        #

  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: self-hosted
    needs: [docker]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: 'Setup Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: 'Deploy to Cloud Run'
        run: |-
          gcloud run deploy $CLOUDRUN_SERVICE \
            --region $REGION \
            --image gcr.io/$PROJECT_ID/$GCR_REPO_NAME:$TAG \
            --platform managed \
            --set-env-vars NAME="javawebapp-new-1"

#      - name: Deploy to Cloud Run
#        id: deploy
#        uses: google-github-actions/deploy-cloudrun@v0
#        with:
#          service: ${{ env.CLOUDRUN_SERVICE }}
#          region: ${{ env.REGION }}
          # NOTE: If required, update to the appropriate source folder
          #image: ${{ env.DOCKER_REPO }}
#          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.GCR_REPO_NAME }}:${{ env.TAG }}
#          env_vars: 'NAME="javawebapp-new-1"'

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
########
